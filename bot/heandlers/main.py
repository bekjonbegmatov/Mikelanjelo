# –°–∏—Å—Ç–µ–º–Ω—ã–µ –ò–º–ø–æ—Ä—Ç
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.enums.parse_mode import ParseMode
from aiogram.types import ReplyKeyboardRemove

#  –ö–∞—Å—Ç–æ–º–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã

from data.manage import UserDatabase
from bot.keyboards.inline.button import anketa_button
from bot.keyboards.keyboard_tg.button import gender_button, user_name_button, main_menu_button
from bot.utils.user import User_Registration as UState

# Import Other routers
from bot.heandlers.anketa import router as anketa_router

router = Router()

@router.message(Command('start'))
async def start_message(message:Message, state:FSMContext):
    with UserDatabase() as db:
        user = db.get_user_by_telegram_id(telegram_id=message.from_user.id)
        if user :
            text = f'''–ü—Ä–∏–≤–µ—Ç {user[3]}  
            '''
            # await message.answer(
            #     text='–ü—Ä–∏–≤–µ—Ç —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –Ω–µ–±–æ–ª—å—à—É—é –∞–Ω–∫–µ—Ç—É\n<b>–î–∞–≤–∞–π —Å–Ω–∞—á–∞–ª–∞ –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å –ø–æ–ª–æ–º </b>',
            #     parse_mode=ParseMode.HTML,
            #     reply_markup=gender_button()
            #     )
            await message.answer(text=text, reply_markup=main_menu_button())

        else:   
            db.add_user(
                telegram_id = message.from_user.id, 
                username    = message.from_user.username,
                first_name  = message.from_user.first_name,
                last_name   = message.from_user.last_name, 
                )
            await message.answer_sticker('CAACAgIAAxkBAAEKPlZk-eLKS3tUCG_aRGY1wZjJY8tnxAACxgEAAhZCawpKI9T0ydt5RzAE')
            await message.answer('''–£–∂–µ <b>—Ç–∏—Å—è—á—ã</b> –ª—é–¥–µ–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –≤ –ú–∏–∫–µ–ª–∞–Ω–¥–∂–µ–ª–æ üòç
                                 
–Ø –º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç–µ–±—è –ø–∞—Ä—É –∏–ª–∏ –¥—Ä—É–∑–µ–π üë´
                                 ''',
                                 parse_mode=ParseMode.HTML
                                )
            await message.answer(
                text='–°–Ω–∞—á–∞–ª–∞ –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è –ø–æ–ª–æ–º',
                parse_mode=ParseMode.HTML,
                reply_markup=gender_button()
                )
            await state.set_state(UState.gender)
# Get IMG
@router.message(UState.gender)
async def handle_photo(message: Message, state:FSMContext):
    name = message.from_user.first_name
    if message.text == "–Ø –¥–µ–≤—É—à–∫–∞":
        await state.update_data(gender=message.text)
        await state.set_state(UState.first_name)
        await message.answer('–ö–∞–∫ —è —Ç–µ–±–µ –º–æ–≥—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è ?', reply_markup=user_name_button(name))
    elif message.text == "–Ø –ø–∞—Ä–µ–Ω—å":
        await state.update_data(gender=message.text)
        await state.set_state(UState.first_name)
        await message.answer('–ö–∞–∫ —è —Ç–µ–±–µ –º–æ–≥—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è ?', reply_markup=user_name_button(name))
    else:
        await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞')

# CallBack 

@router.callback_query(F.data == 'get_ankete')
async def create_ankete(call:CallbackQuery, state:FSMContext):
    await state.set_state(UState.gender)
    await call.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø–æ–ª :', reply_markup=gender_button())
    # continus in anketa.py
    

@router.message(Command('clear'))
async def clear_db(message:Message):
    with UserDatabase() as db:
        db.drop_table()
        await message.answer('TABLE DROPED !!!')
    
# TEST COMMANDS 

router.include_router(anketa_router)